{"version":3,"file":"static/js/717.d6202201.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js"],"sourcesContent":["import Input from \"../../shared/components/FormElements/Input\";\nimport \"./PlaceForm.css\";\nimport {\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\n\nfunction NewPlace() {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false,\n      },\n      description: {\n        value: \"\",\n        isValid: false,\n      },\n      address: {\n        value: \"\",\n        isValid: false,\n      },\n      image: {\n        value: null,\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const placeSubmitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"creator\", auth.userId);\n      formData.append(\"image\", formState.inputs.image.value);\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token,\n        }\n      );\n    } catch (err) {}\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner asOverlay />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address.\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at least 5 characters).\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please provide an image\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </>\n  );\n}\n\nexport default NewPlace;\n","import { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nfunction ImageUpload(props) {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickHandler = (e) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        ref={filePickerRef}\r\n        type=\"file\"\r\n        id={props.id}\r\n        style={{ display: \"none\" }}\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl ? (\r\n            <img src={previewUrl} alt=\"Preview\" />\r\n          ) : (\r\n            <p>Please pick an image.</p>\r\n          )}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n"],"names":["auth","useContext","AuthContext","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useForm","useForm","title","value","isValid","description","address","image","_useForm2","_slicedToArray","formState","inputHandler","placeSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","userId","concat","process","Authorization","token","t0","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","onClick","current","click"],"sourceRoot":""}